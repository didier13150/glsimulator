stages:
  - lint
  - test
  - build

lint-src:
  stage: lint
  image: docker.io/golangci/golangci-lint:v2.3.0
  script:
    - golangci-lint run

test-src:
  stage: test
  image: docker.io/library/golang:1.21
  before_script:
    - make
  script:
    - make test


.build-image:
  image: docker.io/library/docker:dind
  stage: build
  services:
    - name: docker:dind
      alias: docker
  variables:
    DOCKER_HOST: "tcp://docker:2376/"
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: 0
    DOCKER_CERT_PATH: "${DOCKER_TLS_CERTDIR}/client"
    DOCKER_DRIVER: overlay2
  before_script:
    - if [ ! -z "${DOCKER_REGISTRY_USER}" ] && [ ! -z "${DOCKER_REGISTRY_PASSWORD}" ] ;
      then
        echo "${DOCKER_REGISTRY_PASSWORD}" | docker login -u ${DOCKER_REGISTRY_USER} --password-stdin ${DOCKER_REGISTRY} ;
      fi
  script:
    # Build container
    - echo "Building ${DOCKER_REGISTRY}/${REGISTRY_PATH}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_SLUG}"
    - docker build -t ${DOCKER_REGISTRY}/${REGISTRY_PATH}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_SLUG} -f Containerfile .
    - docker tag ${DOCKER_REGISTRY}/${REGISTRY_PATH}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_SLUG} ${DOCKER_REGISTRY}/${REGISTRY_PATH}/${CI_PROJECT_NAME}:latest
    - docker push --all-tags ${DOCKER_REGISTRY}/${REGISTRY_PATH}/${CI_PROJECT_NAME}

build-image-arm64v8:
  variables:
    REGISTRY_PATH: arm64v8
  extends:
    - .build-image
  tags:
    - arm64v8
    
build-image-x86_64:
  variables:
    REGISTRY_PATH: x86_64
  extends:
    - .build-image
  tags:
    - x86_64
